// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FollowersList renders without crashing 1`] = `null`;

exports[`FollowingList renders without crashing 1`] = `null`;

exports[`Login renders without crashing 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Image
    resizeMode="stretch"
    source={
      Object {
        "testUri": "../../../images/background.jpg",
      }
    }
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "height": undefined,
          "width": undefined,
        },
        undefined,
      ]
    }
  />
  <RCTScrollView
    style={
      Object {
        "flex": 1,
        "padding": 20,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 20,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontFamily": "Avenir",
              "fontSize": 27,
              "fontWeight": "bold",
              "paddingBottom": 25,
            }
          }
        >
           Git My Hub 
        </Text>
        <Image
          source={
            Object {
              "testUri": "../../../images/github-512.png",
            }
          }
          style={
            Object {
              "height": 200,
              "paddingBottom": 50,
              "width": 200,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "flex": 2,
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          blurOnSubmit={true}
          onChangeText={[Function]}
          placeholder="Username"
          selectTextOnFocus={true}
          style={
            Object {
              "alignItems": "center",
              "borderBottomColor": "black",
              "borderBottomWidth": 1,
              "borderRadius": 8,
              "fontSize": 18,
              "paddingTop": 20,
            }
          }
        />
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          onChangeText={[Function]}
          onEnter={[Function]}
          placeholder="Password"
          secureTextEntry={true}
          selectTextOnFocus={true}
          style={
            Object {
              "alignItems": "center",
              "borderBottomColor": "black",
              "borderBottomWidth": 1,
              "borderRadius": 8,
              "fontSize": 18,
              "paddingTop": 20,
            }
          }
        />
        <View
          style={
            Object {
              "margin": 7,
            }
          }
        />
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#f5f5f5",
              "borderRadius": 4,
              "opacity": 1,
              "padding": 10,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "black",
                "fontSize": 20,
                "textAlign": "center",
              }
            }
          >
            Login
          </Text>
        </View>
        <View
          style={
            Object {
              "margin": 7,
            }
          }
        />
        <ActivityIndicator
          animating={false}
          color="#0000ff"
          hidesWhenStopped={true}
          size="large"
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`MyGitHub renders without crashing 1`] = `
<View
  loaded={
    Array [
      0,
    ]
  }
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      Object {
        "flex": 1,
      },
    ]
  }
>
  <RCTScrollView
    alwaysBounceHorizontal={false}
    automaticallyAdjustContentInsets={false}
    bounces={false}
    contentContainerStyle={
      Object {
        "flex": 1,
      }
    }
    contentOffset={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    directionalLockEnabled={true}
    horizontal={true}
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="always"
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    overScrollMode="never"
    pagingEnabled={true}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollsToTop={false}
    showsHorizontalScrollIndicator={false}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "flex": 1,
            "overflow": "hidden",
          }
        }
        testID={undefined}
      >
        <View
          collapsable={false}
          removeClippedSubviews={false}
          style={
            Object {
              "flex": 1,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <ActivityIndicator
              animating={true}
              color="#0000ff"
              hidesWhenStopped={true}
              size="large"
            />
          </View>
        </View>
      </View>
      <View
        style={null}
        testID={undefined}
      />
      <View
        style={null}
        testID={undefined}
      />
      <View
        style={null}
        testID={undefined}
      />
    </View>
  </RCTScrollView>
  <View
    collapsable={undefined}
    style={undefined}
  >
    <View
      collapsable={undefined}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "backgroundColor": "#F7F7F7",
          "borderTopColor": "rgba(0, 0, 0, .3)",
          "borderTopWidth": 0.5,
          "flexDirection": "row",
          "height": 49,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "flexGrow": 1,
              }
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#a9a9a9",
                  "fontFamily": "Avenir",
                  "fontSize": 18,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              Profile
            </Text>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "flexGrow": 1,
              }
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#a9a9a9",
                  "fontFamily": "Avenir",
                  "fontSize": 18,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              Repos
            </Text>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "flexGrow": 1,
              }
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#a9a9a9",
                  "fontFamily": "Avenir",
                  "fontSize": 18,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              Followers
            </Text>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "flexGrow": 1,
              }
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "opacity": 1,
              }
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#a9a9a9",
                  "fontFamily": "Avenir",
                  "fontSize": 18,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                }
              }
            >
              Following
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`RepoList renders without crashing 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#bbb",
        "borderTopWidth": 1,
        "marginTop": 20,
      },
      undefined,
    ]
  }
>
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
